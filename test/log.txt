21/06/23
To-do:
1) Preset the data for the state machine in the model workspace of the 
'testModel.xls'. (x)

2) Change the input for StateMachine class.

The StateMachine class required table variable as input argument, but 
Simulink doesn't accept this type as input for the Matlab function block. 
Therefore, the StateMachine class now accepts: 
events (array nx1);
disabledEventsInEachStates (cell array);
transitions (array nx3);

3) Change the input for StateMachine class.

Create a repository to these changes: changeStateMachine.

The StateMachine class required cell array as input argument, but 
Simulink doesn't accept this type as input for the 'Matlab function block'. 
Therefore, the StateMachine class is changed to accept in the contructor: 
list of states (nx1 State array);
transitions (array nx3);

23/06/23

x 1) Update StateMachineUtils and tests.

This class has the purpose to read data from auto-generated files or user 
made files and transform it into arguments to initialize StateMachine class.
Then, it has to create:
- list of States class objects;
- transitions array;
- events array.

2) Create a unique read method for the documents.
Their name is like loadSomethingFrom(path, format);

x 3) getter and setter methods must be changed:
https://www.mathworks.com/help/matlab/matlab_oop/property-set-methods.html

25/06/23

1) Create and test a class to encode the array of State object into the 
Simulink block.

2) Create a test class to the new class.

26/06/23
Change the input arguments of StateMachine from an array of State objects 
to a cell of State object because an array of objects is not supported for  
code generation in Simulink block.

Do the tests.

29/06/2023
Bugs: 
1 - Cannot debug step-by-step in the matlab function block in model
StateMachineModelFromFile.slx
2 - transition with certain event leads to wrong state.

Guesses: 
1 - The definition of the variables are double by default. The class utils 
generates int32. The conversion int32 <-> double can be the source of error.
    The convertion was made and the error now is:
    Assertion failed: StructType::isa(fieldType)
2 - There is no error in model StateMachineModel.slx

(x) test with the same code + StateMachineUtils object;
(x) test with the same code + StateEncoder object;
(x) test with the same code + StateEncoder.decode(stateMatrix) with a
    small, user-made stateMatrix;
(x) test with the same code + StateEncoder.decode(stateMatrix) plus send
    one parameter from file (allEventsArray);
(x) test with the same code + StateEncoder.decode(stateMatrix) plus send
    two parameters from file (allEventsArray, transitionsArray);
(x) test with the same code + StateEncoder.decode(stateMatrix) plus send
     three parameters from file;
    The error is in StateEncoder.decode(stateMatrix) for an imported file.
    The error is converting strings to make the name of the State. The 
    solution is to name each state as 'empty' right now.

    After the change, the model runs but the bug 2 remains.


02/07/23
Model to receive a batch of events.
1) The events are assigned to the machine in the position of the sorted 
stack of events.
2) New event is the last to be assigned: the events are numbered but the 
new event is the last event of the stack of assignament.